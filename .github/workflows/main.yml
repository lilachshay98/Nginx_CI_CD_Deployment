name: Build and Test Docker

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
          
    steps:
      # Step 1: Check out the code from the repository
      - name: Checkout repository   
        uses: actions/checkout@v3
      
      # Step 2: Log in to GitHub Container Registry
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Step 3: Set up Docker Buildx
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1  
      
      # Step 4: Cache Docker layers to speed up build
      - name: Cache Docker layers
        uses: actions/cache@v3
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
          
      # Step 5: Build and tag the Docker images (nginx and test)
      - name: Build Nginx Docker image
        run: |
          docker build -t ghcr.io/lilachshay98/f5_assignment/nginx_image:latest1 ./nginx

      # Step 6: Build the Test Docker image
      - name: Build Test Docker image
        run: |
          docker build -t ghcr.io/lilachshay98/f5_assignment/test_image:latest1 ./test

      # Step 7: Install Docker Compose
      - name: Install Docker Compose
        run: |
          sudo apt-get update
          sudo apt-get install -y docker-compose
            
      # Step 8: Use Docker Compose to start the containers
      - name: Run Docker Compose
        run: docker-compose up -d  

      # Step 9: Check if tests passed by inspecting the output file
      - name: Check Test Results
        run: |
          if test -f ./output/succeeded; then
            echo "Tests passed!"
          else
            echo "Tests failed!"
            exit 1
          fi

      # Step 10: Upload result file (succeeded or fail) as an artifact
      - name: Upload test result
        uses: actions/upload-artifact@v3
        with:
          name: test-result
          path: ./output

